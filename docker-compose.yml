version: "3.9"

services:

  api-simulator:
    build:
      context: .
      dockerfile: src/api_simulator/Dockerfile.api
    container_name: api-simulator
    ports:
      - "9001:9001" 

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # EXTERNAL - host 
      - "29092:29092" # INTERNAL - container
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    # optional: persist kafka data
    # volumes:
    #   - ./data/kafka:/var/lib/kafka/data

    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    # container_name: clickhouse
    ports:
      - "8123:8123"  # HTTP/JDBC
      - "9000:9000"  # Native
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default_pw
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: "8123"
    volumes:
      - ./clickhouse/init.sql:/docker-entrypoint-initdb.d/init.sql
      # - ./data/clickhouse:/var/lib/clickhouse  # optional: persist clickhouse data
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8123/ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 60

  spark-master:
    image: apache/spark:3.5.1
    container_name: spark-master
    command: ["/opt/spark/bin/spark-class","org.apache.spark.deploy.master.Master",
              "--host","spark-master","--port","7077","--webui-port","8080"]
    environment:
      - SPARK_NO_DAEMONIZE=true
    ports:
      - "7077:7077"   # Spark Master RPC（for worker / client connections）
      - "8080:8080"   # Spark Master Web UI
    volumes:
      - ./data/spark-checkpoints:/tmp/spark-checkpoints

  spark-worker:
    image: apache/spark:3.5.1
    container_name: spark-worker
    depends_on:
      - spark-master
    command: ["/opt/spark/bin/spark-class","org.apache.spark.deploy.worker.Worker",
              "spark://spark-master:7077",
              "--webui-port","8081"]
    environment:
      - SPARK_NO_DAEMONIZE=true
    ports:
      - "8081:8081"   # Spark Worker Web UI
    volumes:
      - ./data/spark-checkpoints:/tmp/spark-checkpoints

  producer:
      build:
        context: .
        dockerfile: src/producer/Dockerfile.producer
      environment:
        KAFKA_BROKER: kafka:29092
        RAW_TOPIC: weather.raw.v1
        WEATHER_API: http://api-simulator:9001/weather
      depends_on:
        kafka: 
          condition: service_healthy
        api-simulator:
          condition: service_started

  spark-job:
    build:
      context: .
      dockerfile: src/spark_jobs/Dockerfile.spark-job
    depends_on:
      - spark-master
      - kafka
      - clickhouse
    volumes:
      - ./data/spark-checkpoints:/tmp/spark-checkpoints
    command:
      - /opt/spark/bin/spark-submit
      - --master
      - spark://spark-master:7077
      - --conf
      - spark.jars.ivy=/tmp/.ivy2
      - --packages
      - org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1,com.clickhouse:clickhouse-jdbc:0.6.0
      - /opt/spark-apps/spark_jobs/stream_weather.py
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: default_pw
      CHECKPOINT_DIR: /tmp/spark-checkpoints/weather_agg
    restart: unless-stopped


  streamlit:
    build:
      context: .
      dockerfile: src/streamlit_app/Dockerfile.streamlit
    ports:
      - "8501:8501"
    depends_on:
      clickhouse:
        condition: service_healthy
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: "8123"
      CLICKHOUSE_HOST_USER: default
      CLICKHOUSE_PASSWORD: default_pw
      CLICKHOUSE_DB: weather
      REFRESH_SEC: "30"